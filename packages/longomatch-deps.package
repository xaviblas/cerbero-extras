# vi:si:et:sw=4:sts=4:ts=4:syntax=python
# -*- Mode: Python -*-
import os


class Package(package.Package):
    name = 'longomatch-deps'
    shortdesc  = 'LongoMatch dependencies'
    longdesc  = 'LongoMatch dependencies'
    files = ['ubuntu-font-family:fonts',
             'gtk-sharp',
             'libglade:libs',
             'sqlite3:libs',
             'db4o:cli',
             'mono-addins:cli',
             ]


    def files_list(self):
        r = package.Package.files_list(self)
        r += [
            'lib/mono/4.5/mscorlib.dll',
            'lib/mono/4.5/Mono.Cairo.dll',
            'lib/mono/4.5/Mono.Posix.dll',
            'lib/mono/4.5/Mono.Security.dll',
            'lib/mono/4.5/Mono.Security.dll',
            'lib/mono/4.5/System.dll',
            'lib/mono/4.5/System.Configuration.dll',
            'lib/mono/4.5/System.Core.dll',
            'lib/mono/4.5/System.Data.dll',
            'lib/mono/4.5/System.Drawing.dll',
            'lib/mono/4.5/System.Net.Http.dll',
            'lib/mono/4.5/System.Numerics.dll',
            'lib/mono/4.5/System.Runtime.Serialization.dll',
            'lib/mono/4.5/System.Security.dll',
            'lib/mono/4.5/System.Xml.dll',
            'lib/mono/4.5/System.Xml.Linq.dll',
            'lib/mono/4.5/System.Xaml.dll',
            'lib/mono/4.5/WindowsBase.dll',
            'lib/mono/4.5/System.Windows.Forms.dll',
            'lib/mono/4.5/Facades/System.Runtime.dll',
            'lib/mono/4.5/Facades/System.Runtime.Extensions.dll',
        ]
        if self.config.target_platform == Platform.LINUX:
            prefix = self.config.prefix
            if not prefix.endswith('/'):
                prefix += '/'
            files = []
            for x in r:
                p = os.path.realpath(os.path.join(prefix, x))
                files.append(p.replace(prefix, ''))
                config = p+'.config'
                if os.path.exists(config):
                    files.append(config.replace(prefix, ''))
            r = list(set(r+files))
        return r
